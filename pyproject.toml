[project]
requires-python = ">=3.9"

[tool.poetry]
name = "rich-tools"
version = "0.5.0"
description = "A python package with helpful tools when working with the rich python library."
authors = ["Avi Perl <avi@aviperl.me>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/avi-perl/rich_tools"
keywords = ["rich", "pandas"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: MacOS",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Typing :: Typed",
]

[tool.poetry.dependencies]
python = ">=3.9, <4.0.0"
rich = ">=10.12.0, <=13.8.0"
pandas = "^2.2.2"

[tool.poetry.dev-dependencies]
pytest = "^8.3"
black = "^24.8.0"
coverage = "^7.6.1"
pytest-cov = "^5.0.0"
toml = "^0.10.2"

[tool.poetry.group.dev.dependencies]
pytest-md-report = "^0.6.2"
flake8 = "^7.1.1"
flake8-pyproject = "^1.2.3"

[tool.black]
line-length = 120
include = '\.pyi?$'
extend-exclude = '''
# A regex preceded with ^/ will apply only to files and directories
# in the root of the project.
(
    \.pytest_cache
  | \.git
  | \.mypy_cache
)
'''

[tool.flake8]
max-line-length = 120
max-complexity = 18
count = true
show-source = true
statistics = true
disable-noqa = false
enable-extensions = [
    'G', # flake8-logging-format
]
extend-ignore = ["E203", "F403", "F401"]
extend-exclude = [
    '.github',
    '.Python',
    '.*.pyc',
    '.*.pyo',
    '.*.pyd',
    '.*.py.class',
    '*.egg-info',
    'venv*',
    '.venv*',
    '.*_cache',
    'lib',
    'lib64',
    '.*.so',
    'build',
    'dist',
    'sdist',
    'wheels',
]

[tool.coverage.run]
branch = true
omit = ["*/tests/*"]

[tool.coverage.report]
show_missing = true

[tool.coverage.html]
directory = "htmlcov"

[tool.pytest.ini_options]
pythonpath = "src"
addopts = [
    "--import-mode=importlib",
]
md_report = true
md_report_verbose = 0
md_report_color = "never"
md_report_flavor = "gfm"
md_report_output = ".github-test-report.md"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
